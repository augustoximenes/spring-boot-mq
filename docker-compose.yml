# docker-compose up -d --scale spring-consumer=2
version: '2'
services:
  mq:
    image: store/ibmcorp/mqadvanced-server-dev:9.1.0.0
    hostname: mq
    container_name: mq
    environment:
      LICENSE: accept
      MQ_QMGR_NAME: QM1
    ports:
      - 1414:1414
      - 9443:9443

  mongodb:
    image: mongo:3

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:6.8.10
    environment:
      - http.host=0.0.0.0
      - transport.host=localhost
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g

  graylog:
    image: graylog/graylog:3.3
    environment:
      - GRAYLOG_PASSWORD_SECRET=somepasswordpepper
      # Password: admin
      - GRAYLOG_ROOT_PASSWORD_SHA2=8c6976e5b5410415bde908bd4dee15dfb167a9c873fc4bb8a81f6f2ab448a918
      - GRAYLOG_HTTP_EXTERNAL_URI=http://127.0.0.1:9000/
    links:
      - mongodb:mongo
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      - 9000:9000
      - 1514:1514
      - 1514:1514/udp
      - 12201:12201
      - 12201:12201/udp

  # mvn clean package -DskipTests
  # docker build . -t spring-boot-mq-producer/producer
  spring-producer:
    image: spring-boot-mq-producer/producer:latest
    hostname: spring-producer
    restart: always
    depends_on:
      - mq

  # mvn clean package -DskipTests
  # docker build . -t spring-boot-mq-consumer/consumer
  spring-consumer:
    image: spring-boot-mq-consumer/consumer:latest
    hostname: spring-consumer
    restart: always
    depends_on:
      - spring-producer